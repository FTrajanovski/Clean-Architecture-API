// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RealDatabase))]
    [Migration("20231222140620_NyStruktur")]
    partial class NyStruktur
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AnimalModel");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AnimalModel");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("774c97d1-f98d-4e5c-940b-9569339024d5"),
                            PasswordHash = "Fil123",
                            UserName = "rob"
                        },
                        new
                        {
                            Id = new Guid("33a905de-3f68-4bc3-a424-ac900859b8e1"),
                            PasswordHash = "Stefan123",
                            UserName = "stefan"
                        },
                        new
                        {
                            Id = new Guid("19f578f5-1423-4b2a-8aa6-20901e39bc43"),
                            PasswordHash = "navjet123",
                            UserName = "Navjet"
                        },
                        new
                        {
                            Id = new Guid("85856ae0-963f-41d1-ba2b-2ead54e58233"),
                            PasswordHash = "FindNemo123",
                            UserName = "Nemm"
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345614"),
                            PasswordHash = "",
                            UserName = "TestDeleteUser"
                        });
                });

            modelBuilder.Entity("Domain.Models.UserAnimalModel", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "AnimalId");

                    b.HasIndex("AnimalId");

                    b.ToTable("UserAnimals");
                });

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<bool>("CanFly")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Bird");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b42100ee-afde-47cf-bf0b-5e86b972c401"),
                            Name = "Adam",
                            CanFly = true
                        },
                        new
                        {
                            Id = new Guid("ffb1249a-89b4-4c55-b9f1-9370d346ca32"),
                            Name = "Perry",
                            CanFly = true
                        },
                        new
                        {
                            Id = new Guid("64074050-608f-44f2-acd8-c41474467eae"),
                            Name = "Tweet",
                            CanFly = true
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345612"),
                            Name = "TestBirdForUnitTests",
                            CanFly = true
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345613"),
                            Name = "TestDeleteBird",
                            CanFly = true
                        });
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.HasDiscriminator().HasValue("Cat");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9f49e68-6c56-4e77-8a44-9b907c2a9541"),
                            Name = "Nugget",
                            LikesToPlay = true
                        },
                        new
                        {
                            Id = new Guid("937f58c4-4a03-4852-a0b7-c31b1f9fc0ad"),
                            Name = "SmallMac",
                            LikesToPlay = true
                        },
                        new
                        {
                            Id = new Guid("1e442d7f-2de7-4aab-ba2b-d5d1320c67aa"),
                            Name = "Avocado",
                            LikesToPlay = false
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345610"),
                            Name = "TestCatForUnitTests",
                            LikesToPlay = true
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345611"),
                            Name = "TestDeleteCat",
                            LikesToPlay = true
                        });
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<string>("Breed")
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Dog");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0cdc827a-8fb6-4de0-b400-de36d8a15d91"),
                            Name = "Björn",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("3b4704f8-389a-4637-ab33-4b026500481f"),
                            Name = "Patrik",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("168bfd41-a5f7-41d3-a6fc-8d1a2701fed4"),
                            Name = "Alfred",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345678"),
                            Name = "TestDogForUnitTests",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345679"),
                            Name = "TestDeleteDog",
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.UserAnimalModel", b =>
                {
                    b.HasOne("Domain.Models.Animal.AnimalModel", "Animal")
                        .WithMany("UserAnimals")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserAnimals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Navigation("UserAnimals");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("UserAnimals");
                });
#pragma warning restore 612, 618
        }
    }
}
